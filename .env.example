# League of Legends Team Optimizer Configuration
# Copy this file to .env and customize the values for your setup

# =============================================================================
# RIOT API CONFIGURATION
# =============================================================================

# Your Riot Games API key (get from https://developer.riotgames.com/)
# Required for real-time player data and validation
# Leave empty to run in offline mode
RIOT_API_KEY=RGAPI-your-api-key-here

# Riot API base URL (change based on your region)
# Americas: https://americas.api.riotgames.com
# Europe: https://europe.api.riotgames.com  
# Asia: https://asia.api.riotgames.com
RIOT_API_BASE_URL=https://americas.api.riotgames.com

# API rate limit (requests per 2 minutes)
# Personal API key: 120 (default)
# Production API key: higher limits available
RIOT_API_RATE_LIMIT=120

# Request timeout in seconds
REQUEST_TIMEOUT_SECONDS=30

# Maximum number of retries for failed requests
MAX_RETRIES=3

# Backoff factor for retry delays (exponential backoff)
RETRY_BACKOFF_FACTOR=2.0

# =============================================================================
# PERFORMANCE CALCULATION WEIGHTS
# =============================================================================

# These weights determine how different factors influence team optimization
# All weights must sum to 1.0

# Weight for individual player performance (0.0 - 1.0)
# Higher values prioritize skilled players in their best roles
INDIVIDUAL_WEIGHT=0.6

# Weight for role preferences (0.0 - 1.0)  
# Higher values prioritize player comfort and preference
PREFERENCE_WEIGHT=0.3

# Weight for team synergy (0.0 - 1.0)
# Higher values prioritize players who work well together
SYNERGY_WEIGHT=0.1

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# How long to cache API responses (in hours)
# Shorter duration = more up-to-date data, more API calls
# Longer duration = less API calls, potentially stale data
CACHE_DURATION_HOURS=1

# How long to cache player data (in hours)
# Player data changes less frequently than match data
PLAYER_DATA_CACHE_HOURS=24

# Maximum cache size in megabytes
# Larger cache = better performance, more disk usage
# Smaller cache = less disk usage, more API calls
MAX_CACHE_SIZE_MB=50

# =============================================================================
# DATA STORAGE
# =============================================================================

# Directory for storing player data and application files
DATA_DIRECTORY=data

# Filename for player data storage
PLAYER_DATA_FILE=players.json

# Directory for caching API responses
CACHE_DIRECTORY=cache

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# DEBUG: Very detailed logs (use for troubleshooting)
# INFO: General information (recommended for normal use)
# WARNING: Only warnings and errors
# ERROR: Only errors and critical issues
LOG_LEVEL=INFO

# Enable debug mode (true/false)
# Debug mode provides detailed logging and error information
# Useful for troubleshooting but may impact performance
DEBUG=false

# Number of recent matches to analyze for performance calculation
# More matches = more accurate data, slower processing
# Fewer matches = faster processing, less accurate data
MAX_MATCHES_TO_ANALYZE=20

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Minimum number of matches required for reliable performance data
MIN_MATCHES_FOR_ANALYSIS=5

# Performance calculation lookback period (days)
PERFORMANCE_LOOKBACK_DAYS=30

# Enable automatic cache cleanup (true/false)
AUTO_CACHE_CLEANUP=true

# Cache cleanup threshold (percentage of max cache size)
CACHE_CLEANUP_THRESHOLD=0.8

# Enable performance metrics logging (true/false)
ENABLE_PERFORMANCE_METRICS=true

# Enable user action logging (true/false)
ENABLE_USER_ACTION_LOGGING=true

# =============================================================================
# REGIONAL SETTINGS
# =============================================================================

# Default region for player lookups
# Valid regions: na1, euw1, eun1, kr, br1, la1, la2, oc1, ru, tr1, jp1
DEFAULT_REGION=na1

# Language for API responses (if supported)
# en_US, es_ES, fr_FR, de_DE, it_IT, pl_PL, pt_BR, etc.
LANGUAGE=en_US

# =============================================================================
# OPTIMIZATION SETTINGS
# =============================================================================

# Maximum number of alternative team compositions to generate
MAX_ALTERNATIVES=5

# Minimum score difference between alternatives (0.0 - 1.0)
MIN_ALTERNATIVE_SCORE_DIFF=0.1

# Enable synergy calculation (true/false)
# Synergy calculation requires more processing but provides better results
ENABLE_SYNERGY_CALCULATION=true

# Synergy calculation method (basic, advanced)
# basic: Simple win rate analysis
# advanced: Detailed performance correlation (slower)
SYNERGY_CALCULATION_METHOD=basic

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT USE CASES
# =============================================================================

# COMPETITIVE TEAM (Prioritize performance)
# INDIVIDUAL_WEIGHT=0.8
# PREFERENCE_WEIGHT=0.1
# SYNERGY_WEIGHT=0.1
# MAX_MATCHES_TO_ANALYZE=50

# CASUAL TEAM (Prioritize preferences)
# INDIVIDUAL_WEIGHT=0.3
# PREFERENCE_WEIGHT=0.6
# SYNERGY_WEIGHT=0.1
# MAX_MATCHES_TO_ANALYZE=10

# BALANCED TEAM (Default settings)
# INDIVIDUAL_WEIGHT=0.6
# PREFERENCE_WEIGHT=0.3
# SYNERGY_WEIGHT=0.1
# MAX_MATCHES_TO_ANALYZE=20

# OFFLINE MODE (No API access)
# RIOT_API_KEY=
# INDIVIDUAL_WEIGHT=0.2
# PREFERENCE_WEIGHT=0.8
# SYNERGY_WEIGHT=0.0
# CACHE_DURATION_HOURS=168

# DEBUG MODE (Troubleshooting)
# LOG_LEVEL=DEBUG
# DEBUG=true
# ENABLE_PERFORMANCE_METRICS=true
# ENABLE_USER_ACTION_LOGGING=true